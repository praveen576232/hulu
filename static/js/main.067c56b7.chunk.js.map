{"version":3,"sources":["Header.js","request.js","Nav.js","axios.js","VideoCart.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","fetchTrending","process","feachTopRated","feachActionMovies","feachComedyMovies","feachHororMovie","feachRomanceMovie","feachMistery","feachScifi","feachWestern","feachAnimation","feachTv","Nav","setselectedaaoption","onClick","request","instance","axios","create","baseURL","VideoCart","forwardRef","ref","movie","backdrop_path","poaster_path","line","element","truncateText","text","overview","title","original_name","media_type","release_date","first_air_date","ThumbUpSharp","vote_count","Result","selectedaaoption","useState","movies","setMovies","useEffect","a","get","result","data","results","feachMovies","map","key","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.067c56b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header_icon\">\r\n                <div className=\"icon_and_name header_name_show_click\">\r\n                    <HomeIcon></HomeIcon>\r\n                    <p>Home</p>\r\n                </div>\r\n                <div className=\"icon_and_name\">\r\n                    <FlashOnIcon></FlashOnIcon>\r\n                    <p>Tranding</p>\r\n                </div>\r\n                <div className=\"icon_and_name\">\r\n                    <VideoLibraryIcon></VideoLibraryIcon>\r\n                    <p>Collections</p>\r\n                </div>\r\n                <div className=\"icon_and_name\">\r\n                    <SearchIcon></SearchIcon>\r\n                    <p>serach</p>\r\n                </div>\r\n                <div className=\"icon_and_name\">\r\n                    <LiveTvIcon></LiveTvIcon>\r\n                    <p>verified</p>\r\n                </div>\r\n                <div className=\"icon_and_name\">\r\n                    <PersonOutlineIcon></PersonOutlineIcon>\r\n                    <p>Account</p>\r\n                </div>\r\n            </div>\r\n            <img src=\"https://press.hulu.com/wp-content/uploads/2020/02/hulu-white.png\" alt=\"hulu_logo\"></img>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nexport default{\r\n    fetchTrending: `/trending/all/week?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n     feachTopRated: `/movie/top_rated?api_keys=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n     feachActionMovies: `/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=28`,\r\n     feachComedyMovies:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=35`,\r\n     feachHororMovie:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=27`,\r\n     feachRomanceMovie:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=10749`,\r\n     feachMistery:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=9648`,\r\n     feachScifi :`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=878`,\r\n     feachWestern:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=37`,\r\n     feachAnimation:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=16`,\r\n     feachTv:`/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&with_genres=10770`,\r\n};","import React from 'react'\r\nimport './Nav.css'\r\nimport request from './request'\r\nfunction Nav({setselectedaaoption}) {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h2 onClick={()=>setselectedaaoption(request.fetchTrending)}>Treanding</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachTopRated)}>Top Rated</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachActionMovies)}>Action</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachComedyMovies)}>Comedy</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachHororMovie)}>Horror</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachMistery)}>Mystery</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachRomanceMovie)}>Romance</h2>         \r\n            <h2 onClick={()=>setselectedaaoption(request.feachScifi)}>Sci-fi</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachWestern)}>Western</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachAnimation)}>Animation</h2>\r\n            <h2 onClick={()=>setselectedaaoption(request.feachTv)}>Tv Movie</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://api.themoviedb.org/3'\r\n});\r\nexport default instance;","import React,{forwardRef} from 'react'\r\nimport './VideoCart.css'\r\nimport TextTruncate from 'react-text-truncate'\r\nimport {ThumbUpSharp} from '@material-ui/icons'\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\nconst VideoCart = forwardRef(({movie},ref) =>{\r\n    return (\r\n        <div ref={ref} className=\"videocart\">\r\n            <img alt=\"movie poaster\" src={`${base_url}${movie.backdrop_path || movie.poaster_path}`}></img>\r\n         <TextTruncate\r\n         line={1}\r\n         element=\"p\"\r\n         truncateText=\"...\"\r\n         text ={movie.overview}\r\n         />\r\n\r\n    \r\n                <h2>{movie.title || movie.original_name}</h2>\r\n            <div className=\"movie_info\">\r\n            <p>\r\n                    {movie.media_type && `${movie.media_type}* `}\r\n                    {movie.release_date || movie.first_air_date}\r\n                   {` `} <ThumbUpSharp />\r\n                    {movie.vote_count}\r\n                </p>\r\n                </div>       \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default VideoCart\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Result.css\";\r\nimport axios from \"./axios\";\r\nimport VideoCart from \"./VideoCart\";\r\nimport request from \"./request\";\r\nimport FlipMove from \"react-flip-move\";\r\nfunction Result({ selectedaaoption }) {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    async function feachMovies() {\r\n      const result = await axios.get(selectedaaoption);\r\n\r\n      setMovies(result.data.results);\r\n      return request;\r\n    }\r\n    feachMovies();\r\n  }, [selectedaaoption]);\r\n  return (\r\n    <div className=\"result\">\r\n      <FlipMove>\r\n        {movies.map((movie) => (\r\n          <VideoCart key={movie.id} movie={movie}>\r\n            {\" \"}\r\n          </VideoCart>\r\n        ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState } from 'react';\nimport Header from './Header'\nimport './App.css';\nimport Nav from './Nav';\nimport Result from './Result';\nimport request from './request'\nfunction App() {\n  const [selectedaaoption,setselectedaaoption]=useState(request.fetchTrending)\n  return (\n    <div className=\"app\">\n\n    <Header></Header>\n  \n    <Nav setselectedaaoption={setselectedaaoption}></Nav>\n   \n    <Result selectedaaoption={selectedaaoption}></Result>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}